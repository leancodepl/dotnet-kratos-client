// <auto-generated>
/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using LeanCode.Kratos.Client.Client;

namespace LeanCode.Kratos.Client.Model
{
    /// <summary>
    /// Update Settings Flow with OpenID Connect Method
    /// </summary>
    public partial class KratosUpdateSettingsFlowWithOidcMethod
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KratosUpdateSettingsFlowWithOidcMethod" /> class.
        /// </summary>
        /// <param name="method">Method  Should be set to profile when trying to update a profile.</param>
        /// <param name="flow">Flow ID is the flow&#39;s ID.  in: query</param>
        /// <param name="link">Link this provider  Either this or &#x60;unlink&#x60; must be set.  type: string in: body</param>
        /// <param name="traits">The identity&#39;s traits  in: body</param>
        /// <param name="transientPayload">Transient data to pass along to any webhooks</param>
        /// <param name="unlink">Unlink this provider  Either this or &#x60;link&#x60; must be set.  type: string in: body</param>
        /// <param name="upstreamParameters">UpstreamParameters are the parameters that are passed to the upstream identity provider.  These parameters are optional and depend on what the upstream identity provider supports. Supported parameters are: &#x60;login_hint&#x60; (string): The &#x60;login_hint&#x60; parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session. &#x60;hd&#x60; (string): The &#x60;hd&#x60; parameter limits the login/registration process to a Google Organization, e.g. &#x60;mycollege.edu&#x60;. &#x60;prompt&#x60; (string): The &#x60;prompt&#x60; specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. &#x60;select_account&#x60;.</param>
        [JsonConstructor]
        public KratosUpdateSettingsFlowWithOidcMethod(string method, Option<string?> flow = default, Option<string?> link = default, Option<Object?> traits = default, Option<Object?> transientPayload = default, Option<string?> unlink = default, Option<Object?> upstreamParameters = default)
        {
            Method = method;
            FlowOption = flow;
            LinkOption = link;
            TraitsOption = traits;
            TransientPayloadOption = transientPayload;
            UnlinkOption = unlink;
            UpstreamParametersOption = upstreamParameters;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Method  Should be set to profile when trying to update a profile.
        /// </summary>
        /// <value>Method  Should be set to profile when trying to update a profile.</value>
        [JsonPropertyName("method")]
        public string Method { get; set; }

        /// <summary>
        /// Used to track the state of Flow
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> FlowOption { get; private set; }

        /// <summary>
        /// Flow ID is the flow&#39;s ID.  in: query
        /// </summary>
        /// <value>Flow ID is the flow&#39;s ID.  in: query</value>
        [JsonPropertyName("flow")]
        public string? Flow { get { return this.FlowOption; } set { this.FlowOption = new(value); } }

        /// <summary>
        /// Used to track the state of Link
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> LinkOption { get; private set; }

        /// <summary>
        /// Link this provider  Either this or &#x60;unlink&#x60; must be set.  type: string in: body
        /// </summary>
        /// <value>Link this provider  Either this or &#x60;unlink&#x60; must be set.  type: string in: body</value>
        [JsonPropertyName("link")]
        public string? Link { get { return this.LinkOption; } set { this.LinkOption = new(value); } }

        /// <summary>
        /// Used to track the state of Traits
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> TraitsOption { get; private set; }

        /// <summary>
        /// The identity&#39;s traits  in: body
        /// </summary>
        /// <value>The identity&#39;s traits  in: body</value>
        [JsonPropertyName("traits")]
        public Object? Traits { get { return this.TraitsOption; } set { this.TraitsOption = new(value); } }

        /// <summary>
        /// Used to track the state of TransientPayload
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> TransientPayloadOption { get; private set; }

        /// <summary>
        /// Transient data to pass along to any webhooks
        /// </summary>
        /// <value>Transient data to pass along to any webhooks</value>
        [JsonPropertyName("transient_payload")]
        public Object? TransientPayload { get { return this.TransientPayloadOption; } set { this.TransientPayloadOption = new(value); } }

        /// <summary>
        /// Used to track the state of Unlink
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> UnlinkOption { get; private set; }

        /// <summary>
        /// Unlink this provider  Either this or &#x60;link&#x60; must be set.  type: string in: body
        /// </summary>
        /// <value>Unlink this provider  Either this or &#x60;link&#x60; must be set.  type: string in: body</value>
        [JsonPropertyName("unlink")]
        public string? Unlink { get { return this.UnlinkOption; } set { this.UnlinkOption = new(value); } }

        /// <summary>
        /// Used to track the state of UpstreamParameters
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<Object?> UpstreamParametersOption { get; private set; }

        /// <summary>
        /// UpstreamParameters are the parameters that are passed to the upstream identity provider.  These parameters are optional and depend on what the upstream identity provider supports. Supported parameters are: &#x60;login_hint&#x60; (string): The &#x60;login_hint&#x60; parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session. &#x60;hd&#x60; (string): The &#x60;hd&#x60; parameter limits the login/registration process to a Google Organization, e.g. &#x60;mycollege.edu&#x60;. &#x60;prompt&#x60; (string): The &#x60;prompt&#x60; specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. &#x60;select_account&#x60;.
        /// </summary>
        /// <value>UpstreamParameters are the parameters that are passed to the upstream identity provider.  These parameters are optional and depend on what the upstream identity provider supports. Supported parameters are: &#x60;login_hint&#x60; (string): The &#x60;login_hint&#x60; parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session. &#x60;hd&#x60; (string): The &#x60;hd&#x60; parameter limits the login/registration process to a Google Organization, e.g. &#x60;mycollege.edu&#x60;. &#x60;prompt&#x60; (string): The &#x60;prompt&#x60; specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. &#x60;select_account&#x60;.</value>
        [JsonPropertyName("upstream_parameters")]
        public Object? UpstreamParameters { get { return this.UpstreamParametersOption; } set { this.UpstreamParametersOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KratosUpdateSettingsFlowWithOidcMethod {\n");
            sb.Append("  Method: ").Append(Method).Append("\n");
            sb.Append("  Flow: ").Append(Flow).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  Traits: ").Append(Traits).Append("\n");
            sb.Append("  TransientPayload: ").Append(TransientPayload).Append("\n");
            sb.Append("  Unlink: ").Append(Unlink).Append("\n");
            sb.Append("  UpstreamParameters: ").Append(UpstreamParameters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KratosUpdateSettingsFlowWithOidcMethod" />
    /// </summary>
    public class KratosUpdateSettingsFlowWithOidcMethodJsonConverter : JsonConverter<KratosUpdateSettingsFlowWithOidcMethod>
    {
        /// <summary>
        /// Deserializes json to <see cref="KratosUpdateSettingsFlowWithOidcMethod" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override KratosUpdateSettingsFlowWithOidcMethod Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> method = default;
            Option<string?> flow = default;
            Option<string?> link = default;
            Option<Object?> traits = default;
            Option<Object?> transientPayload = default;
            Option<string?> unlink = default;
            Option<Object?> upstreamParameters = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "method":
                            method = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "flow":
                            flow = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "link":
                            link = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "traits":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                traits = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "transient_payload":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                transientPayload = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        case "unlink":
                            unlink = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "upstream_parameters":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                upstreamParameters = new Option<Object?>(JsonSerializer.Deserialize<Object>(ref utf8JsonReader, jsonSerializerOptions)!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!method.IsSet)
                throw new ArgumentException("Property is required for class KratosUpdateSettingsFlowWithOidcMethod.", nameof(method));

            if (method.IsSet && method.Value == null)
                throw new ArgumentNullException(nameof(method), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (flow.IsSet && flow.Value == null)
                throw new ArgumentNullException(nameof(flow), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (link.IsSet && link.Value == null)
                throw new ArgumentNullException(nameof(link), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (traits.IsSet && traits.Value == null)
                throw new ArgumentNullException(nameof(traits), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (transientPayload.IsSet && transientPayload.Value == null)
                throw new ArgumentNullException(nameof(transientPayload), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (unlink.IsSet && unlink.Value == null)
                throw new ArgumentNullException(nameof(unlink), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (upstreamParameters.IsSet && upstreamParameters.Value == null)
                throw new ArgumentNullException(nameof(upstreamParameters), "Property is not nullable for class KratosUpdateSettingsFlowWithOidcMethod.");

            return new KratosUpdateSettingsFlowWithOidcMethod(method.Value!, flow, link, traits, transientPayload, unlink, upstreamParameters);
        }

        /// <summary>
        /// Serializes a <see cref="KratosUpdateSettingsFlowWithOidcMethod" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosUpdateSettingsFlowWithOidcMethod"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, KratosUpdateSettingsFlowWithOidcMethod kratosUpdateSettingsFlowWithOidcMethod, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, kratosUpdateSettingsFlowWithOidcMethod, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="KratosUpdateSettingsFlowWithOidcMethod" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosUpdateSettingsFlowWithOidcMethod"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, KratosUpdateSettingsFlowWithOidcMethod kratosUpdateSettingsFlowWithOidcMethod, JsonSerializerOptions jsonSerializerOptions)
        {
            if (kratosUpdateSettingsFlowWithOidcMethod.Method == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.Method), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.FlowOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.Flow == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.Flow), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.LinkOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.Link == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.Link), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.TraitsOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.Traits == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.Traits), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.TransientPayloadOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.TransientPayload == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.TransientPayload), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.UnlinkOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.Unlink == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.Unlink), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            if (kratosUpdateSettingsFlowWithOidcMethod.UpstreamParametersOption.IsSet && kratosUpdateSettingsFlowWithOidcMethod.UpstreamParameters == null)
                throw new ArgumentNullException(nameof(kratosUpdateSettingsFlowWithOidcMethod.UpstreamParameters), "Property is required for class KratosUpdateSettingsFlowWithOidcMethod.");

            writer.WriteString("method", kratosUpdateSettingsFlowWithOidcMethod.Method);

            if (kratosUpdateSettingsFlowWithOidcMethod.FlowOption.IsSet)
                writer.WriteString("flow", kratosUpdateSettingsFlowWithOidcMethod.Flow);

            if (kratosUpdateSettingsFlowWithOidcMethod.LinkOption.IsSet)
                writer.WriteString("link", kratosUpdateSettingsFlowWithOidcMethod.Link);

            if (kratosUpdateSettingsFlowWithOidcMethod.TraitsOption.IsSet)
            {
                writer.WritePropertyName("traits");
                JsonSerializer.Serialize(writer, kratosUpdateSettingsFlowWithOidcMethod.Traits, jsonSerializerOptions);
            }
            if (kratosUpdateSettingsFlowWithOidcMethod.TransientPayloadOption.IsSet)
            {
                writer.WritePropertyName("transient_payload");
                JsonSerializer.Serialize(writer, kratosUpdateSettingsFlowWithOidcMethod.TransientPayload, jsonSerializerOptions);
            }
            if (kratosUpdateSettingsFlowWithOidcMethod.UnlinkOption.IsSet)
                writer.WriteString("unlink", kratosUpdateSettingsFlowWithOidcMethod.Unlink);

            if (kratosUpdateSettingsFlowWithOidcMethod.UpstreamParametersOption.IsSet)
            {
                writer.WritePropertyName("upstream_parameters");
                JsonSerializer.Serialize(writer, kratosUpdateSettingsFlowWithOidcMethod.UpstreamParameters, jsonSerializerOptions);
            }
        }
    }
}
