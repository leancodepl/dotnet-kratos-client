// <auto-generated>
/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using LeanCode.Kratos.Client.Client;

namespace LeanCode.Kratos.Client.Model
{
    /// <summary>
    /// Perform Native Logout Request Body
    /// </summary>
    public partial class KratosPerformNativeLogoutBody
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KratosPerformNativeLogoutBody" /> class.
        /// </summary>
        /// <param name="sessionToken">The Session Token  Invalidate this session token.</param>
        [JsonConstructor]
        public KratosPerformNativeLogoutBody(string sessionToken)
        {
            SessionToken = sessionToken;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// The Session Token  Invalidate this session token.
        /// </summary>
        /// <value>The Session Token  Invalidate this session token.</value>
        [JsonPropertyName("session_token")]
        public string SessionToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KratosPerformNativeLogoutBody {\n");
            sb.Append("  SessionToken: ").Append(SessionToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KratosPerformNativeLogoutBody" />
    /// </summary>
    public class KratosPerformNativeLogoutBodyJsonConverter : JsonConverter<KratosPerformNativeLogoutBody>
    {
        /// <summary>
        /// Deserializes json to <see cref="KratosPerformNativeLogoutBody" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override KratosPerformNativeLogoutBody Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> sessionToken = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "session_token":
                            sessionToken = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!sessionToken.IsSet)
                throw new ArgumentException("Property is required for class KratosPerformNativeLogoutBody.", nameof(sessionToken));

            if (sessionToken.IsSet && sessionToken.Value == null)
                throw new ArgumentNullException(nameof(sessionToken), "Property is not nullable for class KratosPerformNativeLogoutBody.");

            return new KratosPerformNativeLogoutBody(sessionToken.Value!);
        }

        /// <summary>
        /// Serializes a <see cref="KratosPerformNativeLogoutBody" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosPerformNativeLogoutBody"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, KratosPerformNativeLogoutBody kratosPerformNativeLogoutBody, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, kratosPerformNativeLogoutBody, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="KratosPerformNativeLogoutBody" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosPerformNativeLogoutBody"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, KratosPerformNativeLogoutBody kratosPerformNativeLogoutBody, JsonSerializerOptions jsonSerializerOptions)
        {
            if (kratosPerformNativeLogoutBody.SessionToken == null)
                throw new ArgumentNullException(nameof(kratosPerformNativeLogoutBody.SessionToken), "Property is required for class KratosPerformNativeLogoutBody.");

            writer.WriteString("session_token", kratosPerformNativeLogoutBody.SessionToken);
        }
    }
}
