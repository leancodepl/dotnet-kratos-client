// <auto-generated>
/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using LeanCode.Kratos.Client.Client;

namespace LeanCode.Kratos.Client.Model
{
    /// <summary>
    /// KratosTokenPaginationHeaders
    /// </summary>
    public partial class KratosTokenPaginationHeaders
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KratosTokenPaginationHeaders" /> class.
        /// </summary>
        /// <param name="link">The link header contains pagination links.  For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).  in: header</param>
        /// <param name="xTotalCount">The total number of clients.  in: header</param>
        [JsonConstructor]
        public KratosTokenPaginationHeaders(Option<string?> link = default, Option<string?> xTotalCount = default)
        {
            LinkOption = link;
            XTotalCountOption = xTotalCount;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Link
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> LinkOption { get; private set; }

        /// <summary>
        /// The link header contains pagination links.  For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).  in: header
        /// </summary>
        /// <value>The link header contains pagination links.  For details on pagination please head over to the [pagination documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).  in: header</value>
        [JsonPropertyName("link")]
        public string? Link { get { return this.LinkOption; } set { this.LinkOption = new(value); } }

        /// <summary>
        /// Used to track the state of XTotalCount
        /// </summary>
        [JsonIgnore]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> XTotalCountOption { get; private set; }

        /// <summary>
        /// The total number of clients.  in: header
        /// </summary>
        /// <value>The total number of clients.  in: header</value>
        [JsonPropertyName("x-total-count")]
        public string? XTotalCount { get { return this.XTotalCountOption; } set { this.XTotalCountOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KratosTokenPaginationHeaders {\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  XTotalCount: ").Append(XTotalCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KratosTokenPaginationHeaders" />
    /// </summary>
    public class KratosTokenPaginationHeadersJsonConverter : JsonConverter<KratosTokenPaginationHeaders>
    {
        /// <summary>
        /// Deserializes json to <see cref="KratosTokenPaginationHeaders" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override KratosTokenPaginationHeaders Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> link = default;
            Option<string?> xTotalCount = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "link":
                            link = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "x-total-count":
                            xTotalCount = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (link.IsSet && link.Value == null)
                throw new ArgumentNullException(nameof(link), "Property is not nullable for class KratosTokenPaginationHeaders.");

            if (xTotalCount.IsSet && xTotalCount.Value == null)
                throw new ArgumentNullException(nameof(xTotalCount), "Property is not nullable for class KratosTokenPaginationHeaders.");

            return new KratosTokenPaginationHeaders(link, xTotalCount);
        }

        /// <summary>
        /// Serializes a <see cref="KratosTokenPaginationHeaders" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosTokenPaginationHeaders"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, KratosTokenPaginationHeaders kratosTokenPaginationHeaders, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, kratosTokenPaginationHeaders, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="KratosTokenPaginationHeaders" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosTokenPaginationHeaders"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, KratosTokenPaginationHeaders kratosTokenPaginationHeaders, JsonSerializerOptions jsonSerializerOptions)
        {
            if (kratosTokenPaginationHeaders.LinkOption.IsSet && kratosTokenPaginationHeaders.Link == null)
                throw new ArgumentNullException(nameof(kratosTokenPaginationHeaders.Link), "Property is required for class KratosTokenPaginationHeaders.");

            if (kratosTokenPaginationHeaders.XTotalCountOption.IsSet && kratosTokenPaginationHeaders.XTotalCount == null)
                throw new ArgumentNullException(nameof(kratosTokenPaginationHeaders.XTotalCount), "Property is required for class KratosTokenPaginationHeaders.");

            if (kratosTokenPaginationHeaders.LinkOption.IsSet)
                writer.WriteString("link", kratosTokenPaginationHeaders.Link);

            if (kratosTokenPaginationHeaders.XTotalCountOption.IsSet)
                writer.WriteString("x-total-count", kratosTokenPaginationHeaders.XTotalCount);
        }
    }
}
