// <auto-generated>
/*
 * Ory Identities API
 *
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * Contact: office@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using LeanCode.Kratos.Client.Client;

namespace LeanCode.Kratos.Client.Model
{
    /// <summary>
    /// Logout Flow
    /// </summary>
    public partial class KratosLogoutFlow
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KratosLogoutFlow" /> class.
        /// </summary>
        /// <param name="logoutToken">LogoutToken can be used to perform logout using AJAX.</param>
        /// <param name="logoutUrl">LogoutURL can be opened in a browser to sign the user out.  format: uri</param>
        [JsonConstructor]
        public KratosLogoutFlow(string logoutToken, string logoutUrl)
        {
            LogoutToken = logoutToken;
            LogoutUrl = logoutUrl;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// LogoutToken can be used to perform logout using AJAX.
        /// </summary>
        /// <value>LogoutToken can be used to perform logout using AJAX.</value>
        [JsonPropertyName("logout_token")]
        public string LogoutToken { get; set; }

        /// <summary>
        /// LogoutURL can be opened in a browser to sign the user out.  format: uri
        /// </summary>
        /// <value>LogoutURL can be opened in a browser to sign the user out.  format: uri</value>
        [JsonPropertyName("logout_url")]
        public string LogoutUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class KratosLogoutFlow {\n");
            sb.Append("  LogoutToken: ").Append(LogoutToken).Append("\n");
            sb.Append("  LogoutUrl: ").Append(LogoutUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="KratosLogoutFlow" />
    /// </summary>
    public class KratosLogoutFlowJsonConverter : JsonConverter<KratosLogoutFlow>
    {
        /// <summary>
        /// Deserializes json to <see cref="KratosLogoutFlow" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override KratosLogoutFlow Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> logoutToken = default;
            Option<string?> logoutUrl = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "logout_token":
                            logoutToken = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "logout_url":
                            logoutUrl = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!logoutToken.IsSet)
                throw new ArgumentException("Property is required for class KratosLogoutFlow.", nameof(logoutToken));

            if (!logoutUrl.IsSet)
                throw new ArgumentException("Property is required for class KratosLogoutFlow.", nameof(logoutUrl));

            if (logoutToken.IsSet && logoutToken.Value == null)
                throw new ArgumentNullException(nameof(logoutToken), "Property is not nullable for class KratosLogoutFlow.");

            if (logoutUrl.IsSet && logoutUrl.Value == null)
                throw new ArgumentNullException(nameof(logoutUrl), "Property is not nullable for class KratosLogoutFlow.");

            return new KratosLogoutFlow(logoutToken.Value!, logoutUrl.Value!);
        }

        /// <summary>
        /// Serializes a <see cref="KratosLogoutFlow" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosLogoutFlow"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, KratosLogoutFlow kratosLogoutFlow, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, kratosLogoutFlow, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="KratosLogoutFlow" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="kratosLogoutFlow"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, KratosLogoutFlow kratosLogoutFlow, JsonSerializerOptions jsonSerializerOptions)
        {
            if (kratosLogoutFlow.LogoutToken == null)
                throw new ArgumentNullException(nameof(kratosLogoutFlow.LogoutToken), "Property is required for class KratosLogoutFlow.");

            if (kratosLogoutFlow.LogoutUrl == null)
                throw new ArgumentNullException(nameof(kratosLogoutFlow.LogoutUrl), "Property is required for class KratosLogoutFlow.");

            writer.WriteString("logout_token", kratosLogoutFlow.LogoutToken);

            writer.WriteString("logout_url", kratosLogoutFlow.LogoutUrl);
        }
    }
}
